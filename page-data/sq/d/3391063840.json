{"data":{"projects":{"edges":[{"node":{"frontmatter":{"title":"spending management system (complete back-end)","tech":["Java","Springboot","Histrix","Hibernate","Jpa","Edureka Server","Could gateway","Swagger"],"github":"https://github.com/jbgwese/spending-tracker","external":"https://github.com/jbgwese/spending-tracker"},"html":"<p>This is a system that I designed from back-end using java and springboot. The main goal was to be able to manage income, expenses and sales of my side businesses. I built the system from ground and will continue adding new features.</p>"}},{"node":{"frontmatter":{"title":"online-shop (complete back-end)","tech":["Java","Springboot","Histrix","Hibernate","Jpa","Edureka Server","Could gateway","Swagger","SpringAdmin"],"github":"https://github.com/jbgwese/springboot-microservices-architecture-online-shop","external":"#"},"html":"<p>This project started as an online training program where I was teaching people microservice driven architecture in springboot and java. In this course and project, I touch on almost every technology, skill and configurations needed to have a perroduction ready system. Currently the system has all the back-end done and is left intergrating the UI using React.</p>"}},{"node":{"frontmatter":{"title":"Complet Microservices Architecture Using Springboot (user vs deparments context)","tech":["Java","Springboot","Histrix","Hibernate","Jpa","Edureka Server","Could gateway","Swagger"],"github":"https://github.com/jbgwese/springboot-microservices-user-department-management","external":"#"},"html":"<p>A fully fletched micro-service architecture system built in java using springboot. The project shows communication between the two services through API calls where the user service callthe department service before saving a new user.</p>"}}]}}}